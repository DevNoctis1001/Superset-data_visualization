name: "Pull Request Labeler"
on:
  pull_request:
    types: [opened, reopened, synchronize, edited]
# cancel previous workflow jobs for PRs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true
  

jobs:
  config:
    runs-on: "ubuntu-latest"
    # no need to run this on PR descriptn changes (edited)
    outputs:
      has-secrets: ${{ steps.check.outputs.has-secrets }}
    steps:
      - name: "Check for secrets"
        id: check
        shell: bash
        run: |
          if [ -n "${{ (secrets.GITHUB_TOKEN != '') || '' }}" ]; then
            echo "has-secrets=1" >> "$GITHUB_OUTPUT"
          fi

  labeler:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    if: ${{ github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'synchronize' }}
    steps:
    - uses: actions/labeler@v5
      with:
        sync-labels: true

    # TODO: run scripts based on labels!
    # - id: run-translation-scripts
    #   if: contains(steps.label-the-PR.outputs.all-labels, 'i18n')
    #   run: |
    #     echo "Running translation scripts"
    #     # Generate .pot -> .po -> .json files

  # This'll look at the PR body and add a label if it contains an issue-closing keyword
  # it runs on every PR event, including "edited" since people tend to add "closes #123" in the PR body after opening it
  label-auto-closing:
    needs: config
    if: needs.config.outputs.has-secrets
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Auto-label PRs
      uses: actions/github-script@v7
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const closingKeywords = /close|closes|closed|fix|fixes|fixed|resolve|resolves|resolved #[0-9]+/gi;
          const prBody = context.payload.pull_request.body;
          const issueNumbers = prBody.match(closingKeywords);
          if (issueNumbers) {
            console.log('Found an issue link! Labeling this PR');
            github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['closes-issue']
            });
          } else {
            // If closing keywords are not found, attempt to remove the label
            console.log("No issue link found! Attempting to remove label');
            try {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                name: labelName
              });
            } catch {
              // There wasn't a label to remove, and that's just fine
              console.log('No label was present to remove');
            }
          }